plugins {
    id 'com.palantir.docker' version '0.25.0'
    id 'org.jetbrains.kotlin.jvm' version '1.6.21'
    id 'application'
}

ext {
    sharedDir                       = file("${project.rootDir}/shared")
    sailfishVersion                 = '3.3.13'
}

group = 'com.exactpro.th2'
version = release_version

repositories {
    maven {
        name 'MavenLocal'
        url sharedDir
    }

    // ignoreGradleMetadataRedirection is used for sonatype because
    // Sailfish dependencies have constrains that interfere with our BOM
    // so we exclude Gradle metadata for this repositories

    maven {
        name 'Sonatype_snapshots'
        url 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
        metadataSources {
            mavenPom()
            artifact()
            ignoreGradleMetadataRedirection()
        }
    }
    maven {
        name 'Sonatype_releases'
        url 'https://s01.oss.sonatype.org/content/repositories/releases/'
        metadataSources {
            mavenPom()
            artifact()
            ignoreGradleMetadataRedirection()
        }
    }
    mavenCentral {
        metadataSources {
            mavenPom()
            artifact()
        }
    }
    mavenLocal()

    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
        resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
    }
}

jar {
    manifest {
        attributes(
            'Created-By':               "${System.getProperty('java.version')} (${System.getProperty('java.vendor')})",
            'Specification-Title':      '',
            'Specification-Vendor':     'Exactpro Systems LLC',
            'Implementation-Title':     project.archivesBaseName,
            'Implementation-Vendor':    'Exactpro Systems LLC',
            'Implementation-Vendor-Id': 'com.exactpro',
            'Implementation-Version':   project.version
        )
    }
}

sourceCompatibility = 11
targetCompatibility = 11

compileKotlin {
    kotlinOptions.jvmTarget = "11"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "11"
}

dependencies {
    api platform('com.exactpro.th2:bom:4.0.1')

    implementation 'com.exactpro.th2:common:3.42.0-dev-3174619150-SNAPSHOT'
    implementation 'com.exactpro.th2:sailfish-utils:3.13.0-dev-3204703314-SNAPSHOT'

    implementation "org.slf4j:slf4j-api"

    implementation group: 'io.reactivex.rxjava3', name: 'rxjava', version: '3.0.4'

    implementation 'io.prometheus:simpleclient'

    implementation("com.exactpro.sf:sailfish-core:${sailfishVersion}")

    testImplementation('org.apache.logging.log4j:log4j-slf4j-impl') {
        because('logging in testing')
    }
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.0'
}

test {
    useJUnitPlatform()
}

application {
    mainClass.set('com.exactpro.th2.conn.MicroserviceMain')
}

applicationName = 'service'

distTar {
    archiveFileName.set("${applicationName}.tar")
}

dockerPrepare {
    dependsOn distTar
}

docker {
    copySpec.from(tarTree("$buildDir/distributions/${applicationName}.tar"))
}
